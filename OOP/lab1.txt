#include <stdio.h>
#include <stdlib.h>

#define Size 10
int Top=-1, inp_array[Size];

void Push()
{
    int x;

    if(Top==Size-1)
    {
        printf("\nOverflow!!");
    }
    else
    {
        printf("\nIntroduceti numarul ce va fi in stack:");
        scanf("%d",&x);
        Top++;
        inp_array[Top]=x;
    }
}

void Pop()
{
    if(Top==-1)
    {
        printf("\nUnderflow!!");
    }
    else
    {
        printf("\nElementul scos:  %d",inp_array[Top]);
        Top--;
    }
}
int Top_element(){
    if(Top==-1){
        printf("\nUnderflow!!");
    }
    else{
        return inp_array[Top];
    }
}

void show()
{


    if(Top==-1)
    {
        printf("\nUnderflow!!");
    }
    else
    {
        printf("\nElementele prezente in stack: \n");
        for(int i=Top;i>=0;--i)
            printf("%d\n",inp_array[i]);
    }
}

void find(){
    int x,current;
    printf("Introduceti numarul cautat: ");
    scanf("%d",&x);
    while(Top!=-1){
        current = Top_element();
        Pop();
        if(current==x){
            printf("\nNumarul a fost gasit\n");
            return;
        }
    }
    printf("\nNumarul nu a fost gasit\n");
}

int main()
{
    int choice;

    while(1)
    {
        printf("\nOperatiile posibile cu stack");
        printf("\n1.Push\n2.Pop\n3.Show\n4.Find\n5.End");
        printf("\n\nIntroduceti alegerea dvs:");
        scanf("%d",&choice);

        switch(choice)
        {
            case 1: Push();
                    break;
            case 2: Pop();
                    break;
            case 3: show();
                    break;
            case 4: find();
                    break;
            case 5: exit(0);

            default: printf("\nNumar incorect!!");
        }
    }
}
